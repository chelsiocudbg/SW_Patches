From 2c17c0b657925308447bb6885f46cc91cacd898e Mon Sep 17 00:00:00 2001
From: Steve Wise <swise@opengridcomputing.com>
Date: Tue, 19 Dec 2017 14:02:10 -0800
Subject: [PATCH 90/90] iw_cxgb4: when flushing, complete all wrs in a chain

commit d14587334580bc94d3ee11e8320e0c157f91ae8f
Author: Steve Wise <swise@opengridcomputing.com>
Date:   Tue Dec 19 14:02:10 2017 -0800

    iw_cxgb4: when flushing, complete all wrs in a chain

    If a wr chain was posted and needed to be flushed, only the first
    wr in the chain was completed with FLUSHED status.  The rest were
    never completed.  This caused isert to hang on shutdown due to the
    missing completions which left iscsi IO commands referenced, stalling
    the shutdown.

    Fixes: 4fe7c2962e11 ("iw_cxgb4: refactor sq/rq drain logic")

    Cc: stable@vger.kernel.org
    Signed-off-by: Steve Wise <swise@opengridcomputing.com>
    Signed-off-by: Jason Gunthorpe <jgg@mellanox.com>
---
 drivers/infiniband/hw/cxgb4/qp.c | 28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/drivers/infiniband/hw/cxgb4/qp.c b/drivers/infiniband/hw/cxgb4/qp.c
index 7262d169e249..8204e7bd1e3d 100644
--- a/drivers/infiniband/hw/cxgb4/qp.c
+++ b/drivers/infiniband/hw/cxgb4/qp.c
@@ -859,6 +859,22 @@ static int complete_sq_drain_wr(struct c4iw_qp *qhp, struct ib_send_wr *wr)
 	return 0;
 }
 
+static int complete_sq_drain_wrs(struct c4iw_qp *qhp, struct ib_send_wr *wr,
+				struct ib_send_wr **bad_wr)
+{
+	int ret = 0;
+
+	while (wr) {
+		ret = complete_sq_drain_wr(qhp, wr);
+		if (ret) {
+			*bad_wr = wr;
+			break;
+		}
+		wr = wr->next;
+	}
+	return ret;
+}
+
 static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
 {
 	struct t4_cqe cqe = {};
@@ -892,6 +908,14 @@ static void complete_rq_drain_wr(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
 }
 
 
+static void complete_rq_drain_wrs(struct c4iw_qp *qhp, struct ib_recv_wr *wr)
+{
+	while (wr) {
+		complete_rq_drain_wr(qhp, wr);
+		wr = wr->next;
+	}
+}
+
 int c4iw_post_send(struct ib_qp *ibqp, struct ib_send_wr *wr,
 		   struct ib_send_wr **bad_wr)
 {
@@ -915,7 +939,7 @@ int c4iw_post_send(struct ib_qp *ibqp, struct ib_send_wr *wr,
 	 */
 	if (qhp->wq.flushed) {
 			spin_unlock_irqrestore(&qhp->lock, flag);
-			err = complete_sq_drain_wr(qhp, wr);
+			err = complete_sq_drain_wrs(qhp, wr, bad_wr);
 			return err;
 	}
 	num_wrs = t4_sq_avail(&qhp->wq);
@@ -1063,7 +1087,7 @@ int c4iw_post_receive(struct ib_qp *ibqp, struct ib_recv_wr *wr,
 	 */
 	if (qhp->wq.flushed) {
 			spin_unlock_irqrestore(&qhp->lock, flag);
-			complete_rq_drain_wr(qhp, wr);
+			complete_rq_drain_wrs(qhp, wr);
 			return err;
 	}
 	num_wrs = t4_rq_avail(&qhp->wq);
-- 
2.9.3

