From c20b54f3c5fd4979b5b5b3428c505d9d03f79d4d Mon Sep 17 00:00:00 2001
From: Rahul Lakkireddy <rahul.lakkireddy@chelsio.com>
Date: Tue, 27 Jun 2017 15:08:49 +0530
Subject: [PATCH 18/28] cxgb4: Don't sleep when mbox cmd is issued from
 interrupt context

commit 5a20f5cfd7276862a8d21d75f83359840ed6e662
Author: Hariprasad Shenai <hariprasad@chelsio.com>
Date:   Tue May 3 18:58:01 2016 +0530

    cxgb4: Don't sleep when mbox cmd is issued from interrupt context

    When link goes down, from the interrupt handler DCB priority for the
    Tx queues needs to be unset. We issue mbox command to unset the Tx queue
    priority with negative timeout. In t4_wr_mbox_meat_timeout() do not sleep
    when negative timeout is passed, since it is called from interrupt context.

    Signed-off-by: Hariprasad Shenai <hariprasad@chelsio.com>
    Signed-off-by: David S. Miller <davem@davemloft.net>
---
 drivers/net/ethernet/chelsio/cxgb4/t4_hw.c | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
index c1849b5..29bd1c5 100644
--- a/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
+++ b/drivers/net/ethernet/chelsio/cxgb4/t4_hw.c
@@ -286,6 +286,12 @@ int t4_wr_mbox_meat_timeout(struct adapter *adap, int mbox, const void *cmd,
 	if (adap->pdev->error_state != pci_channel_io_normal)
 		return -EIO;
 
+	/* If we have a negative timeout, that implies that we can't sleep. */
+	if (timeout < 0) {
+		sleep_ok = false;
+		timeout = -timeout;
+	}
+
 	v = MBOWNER_G(t4_read_reg(adap, ctl_reg));
 	for (i = 0; v == MBOX_OWNER_NONE && i < 3; i++)
 		v = MBOWNER_G(t4_read_reg(adap, ctl_reg));
-- 
1.8.3.1

